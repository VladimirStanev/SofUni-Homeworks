--EXAM

--SECTION 1

CREATE DATABASE TouristAgency

------

CREATE TABLE Countries(
Id INT PRIMARY KEY IDENTITY,
[Name] NVARCHAR(50) NOT NULL
)

CREATE TABLE Destinations(
Id INT PRIMARY KEY IDENTITY,
[Name] VARCHAR(50) NOT NULL,
CountryId INT FOREIGN KEY REFERENCES Countries(Id) NOT NULL
)

CREATE TABLE Rooms(
Id INT PRIMARY KEY IDENTITY,
[Type] VARCHAR(40) NOT NULL,
Price DECIMAL(18, 2) NOT NULL,
BedCount INT NOT NULL,
CHECK (BedCount > 0 AND BedCount <= 10),
)

CREATE TABLE Hotels(
Id INT PRIMARY KEY IDENTITY,
[Name] VARCHAR(50) NOT NULL,
DestinationId INT FOREIGN KEY REFERENCES Destinations(Id) NOT NULL
)

CREATE TABLE Tourists(
Id INT PRIMARY KEY IDENTITY,
[Name] NVARCHAR(80) NOT NULL,
PhoneNumber VARCHAR(20) NOT NULL,
Email VARCHAR(80),
CountryId INT FOREIGN KEY REFERENCES Countries(Id) NOT NULL
)

CREATE TABLE Bookings(
Id INT PRIMARY KEY IDENTITY,
ArrivalDate DateTime2 NOT NULL,
DepartureDate DateTime2 NOT NULL,
AdultsCount INT NOT NULL,
CHECK (AdultsCount >= 1 AND AdultsCount <= 10),
ChildrenCount INT NOT NULL,
CHECK (ChildrenCount >= 0 AND ChildrenCount <= 9),
TouristId INT FOREIGN KEY REFERENCES Tourists(Id) NOT NULL,
HotelId INT FOREIGN KEY REFERENCES Hotels(Id) NOT NULL,
RoomId INT FOREIGN KEY REFERENCES Rooms(Id) NOT NULL
)

CREATE TABLE HotelsRooms(
HotelId INT FOREIGN KEY REFERENCES Hotels(Id) NOT NULL,
RoomId INT FOREIGN KEY REFERENCES Rooms(Id) NOT NULL,
CONSTRAINT PK_HotelsRooms PRIMARY KEY (HotelId, RoomId)
)

--1

--INSERTION OF "Dataset.sql "

--SECTION 2

INSERT INTO Tourists([Name], PhoneNumber, Email, CountryId)
VALUES('John Rivers', '653-551-1555', 'john.rivers@example.com', 6),
	('Adeline Aglaé', '122-654-8726', 'adeline.aglae@example.com', 2),
	('Sergio Ramirez', '233-465-2876', 's.ramirez@example.com', 3),
	('Johan Müller', '322-876-9826', 'j.muller@example.com', 7),
	('Eden Smith', '551-874-2234', 'eden.smith@example.com', 6)

INSERT INTO Bookings(ArrivalDate, DepartureDate, AdultsCount, ChildrenCount, TouristId, HotelId, RoomId)
VALUES('2024-03-01', '2024-03-11', 1, 0, 21, 3, 5),
	('2023-12-28', '2024-01-06', 2, 1, 22, 13, 3),
	('2023-11-15', '2023-11-20', 1, 2, 23, 19, 7),
	('2023-12-05', '2023-12-09', 4, 0, 24, 6, 4),
	('2024-05-01', '2024-05-07', 6, 0, 25, 14, 6)

--2

UPDATE Bookings
SET DepartureDate = DATEADD(DAY, 1, DepartureDate)
WHERE ArrivalDate BETWEEN '2023-12-01' AND '2023-12-31'

UPDATE Tourists
SET Email = NULL
WHERE [Name] LIKE '%MA%'

--Zaklei sa brat toz update na bookingsa mega shano se poluchi :d

--3


DELETE FROM Bookings WHERE TouristId IN (6, 16, 25)
DELETE FROM Tourists WHERE [Name] LIKE '%Smith%'
-- Smith ids: 6, 16, 25

--4

SELECT 
FORMAT(ArrivalDate, 'yyyy-MM-dd') AS ArrivalDate,
AdultsCount,
ChildrenCount
FROM Bookings b
JOIN Rooms r ON r.Id = b.RoomId
ORDER BY r.Price DESC, ArrivalDate ASC

--5

SELECT 
h.Id,
h.[Name]
FROM Hotels h
JOIN HotelsRooms hr ON hr.HotelId = h.Id
JOIN Rooms r ON r.Id = hr.RoomId
LEFT JOIN Bookings b ON b.HotelId = h.Id
WHERE r.[Type] = 'VIP Apartment'
GROUP BY h.Id, h.[Name]
ORDER BY COUNT(b.Id) DESC


--6

SELECT
t.Id,
t.[Name],
t.PhoneNumber
FROM Tourists t
WHERE t.Id NOT IN(SELECT b.TouristId FROM Bookings b
JOIN Hotels h ON b.HotelId = h.Id)
ORDER BY t.[Name]

--7

SELECT TOP(10)
h.[Name],
d.[Name],
c.[Name]
FROM Bookings b
JOIN Hotels h ON h.Id = b.HotelId
JOIN Destinations d ON d.Id = h.DestinationId
JOIN Countries c ON c.Id = d.CountryId
WHERE NOT h.Id % 2 = 0
ORDER BY c.[Name] ASC, b.ArrivalDate ASC

--8

SELECT
h.[Name] [HotelName],
r.Price [RoomPrice]
FROM Tourists t
JOIN Bookings b ON b.TouristId = t.Id
JOIN Hotels h ON h.Id = b.HotelId
JOIN HotelsRooms hr ON hr.HotelId = h.Id
JOIN Rooms r ON r.Id = hr.RoomId AND r.Id = b.RoomId
WHERE t.[Name] NOT LIKE '%EZ'
ORDER BY r.Price DESC

--9

SELECT
h.[Name] AS HotelName, 
SUM(-(r.Price * DATEDIFF(WEEKDAY, b.DepartureDate, b.ArrivalDate))) AS TotalRevenue
FROM Bookings b
JOIN Hotels h ON h.Id = b.HotelId
JOIN Rooms r ON r.Id = b.RoomId
GROUP BY h.[Name]
ORDER BY TotalRevenue DESC;

--10

--SECTION 4

CREATE FUNCTION udf_RoomsWithTourists(@name NVARCHAR(30))
RETURNS INT
AS
BEGIN
	DECLARE @totalNumOfTourists INT =
	(
		SELECT
		COUNT(b.Id)
		FROM Bookings b 
		JOIN Tourists t ON t.Id = b.TouristId
		JOIN Rooms r ON r.Id = b.RoomId
		WHERE r.[Type] = @name
	)

	IF @totalNumOfTourists IS NULL
		SET @totalNumOfTourists = 0

	RETURN @totalNumOfTourists
END

-----

SELECT dbo.udf_RoomsWithTourists('Double Room')

--11

CREATE PROCEDURE usp_SearchByCountry
@country NVARCHAR(60)
AS
BEGIN
    SELECT 
	t.[Name], 
	t.PhoneNumber, 
	t.Email, 
	COUNT(b.Id) AS CountOfBookings
    FROM Tourists t
	JOIN Countries c ON c.Id = t.CountryId
    JOIN Bookings b ON t.Id = b.TouristId
    JOIN Hotels h ON b.HotelId = h.Id
    JOIN HotelsRooms hr ON hr.HotelId = h.Id
	JOIN Rooms r ON r.Id = hr.RoomId
    WHERE c.[Name] = @country
    GROUP BY t.Name, t.PhoneNumber, t.Email
    ORDER BY t.Name ASC, CountOfBookings DESC;
END

EXEC usp_SearchByCountry 'Greece'

--12